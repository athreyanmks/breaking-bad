{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Athreyan\\\\Documents\\\\Athreyan\\\\React\\\\breaking-bad\\\\src\\\\Components\\\\Listing.js\";\nimport React, { Component } from 'react';\nimport Charrow from './Charrow';\n\nasync function fetch_query(q) {\n  let res;\n  res = await fetch(q);\n  let results = await res.json(); // console.log(results)\n\n  return results;\n}\n\nclass Listing extends Component {\n  // let result_master\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(this.state.query + '?limit=10').then(res => res.json()).then(result => {\n        this.setState({\n          result\n        });\n      }); // console.log(this.state.result)\n    };\n\n    this.handlePrev = () => {\n      this.setState({\n        pagecount: this.state.pagecount - 1\n      }, () => {\n        fetch(this.state.query + '?limit=10&offset=' + this.state.pagecount * 10).then(res => res.json()).then(result => {\n          this.setState({\n            result\n          });\n        });\n      });\n    };\n\n    this.handleNext = () => {\n      this.setState({\n        pagecount: this.state.pagecount + 1\n      }, () => {\n        fetch(this.state.query + '?limit=10&offset=' + this.state.pagecount * 10).then(res => res.json()).then(result => {\n          this.setState({\n            result\n          });\n        });\n      });\n    };\n\n    this.profilerender = name => {\n      console.log(name);\n      let name_split = name.replace('/ /g', '+');\n      this.setState({\n        profilename: name\n      }, () => {\n        fetch(this.state.query + '?name=' + name_split).then(res => res.json()).then(profile => {\n          this.setState({\n            profile\n          });\n        });\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      query: 'https://www.breakingbadapi.com/api/characters',\n      result: [],\n      pagecount: 0,\n      profilename: 'Walter White',\n      profile: []\n    }; // this,handleNext = this.handleNext.bind(this)\n    // this,handlePrev = this.handlePrev.bind(this)\n  }\n\n  render() {\n    const {\n      img,\n      name,\n      dob,\n      occ,\n      stat,\n      nick,\n      act,\n      seas,\n      cat\n    } = this.state.profile;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handlePrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 66\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [this.state.result.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Charrow, {\n              var: x,\n              profilerend: this.profilerender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 53\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 108\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 47\n          }, this)), \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6\",\n              children: \"IMG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm-6\",\n              children: this.state.profile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: dob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: occ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: stat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: \"Nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: \"Actor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: \"Seasons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: \"Quotes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Listing;","map":{"version":3,"sources":["C:/Users/Athreyan/Documents/Athreyan/React/breaking-bad/src/Components/Listing.js"],"names":["React","Component","Charrow","fetch_query","q","res","fetch","results","json","Listing","constructor","props","componentDidMount","state","query","then","result","setState","handlePrev","pagecount","handleNext","profilerender","name","console","log","name_split","replace","profilename","profile","render","img","dob","occ","stat","nick","act","seas","cat","map","x"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Charrow from './Charrow'\r\n\r\nasync function fetch_query(q)\r\n    {\r\n        let res\r\n\r\n        res = await fetch(q)\r\n\r\n        let results = await res.json()\r\n        // console.log(results)\r\n        return results;\r\n        \r\n    }\r\n\r\nclass Listing extends Component {\r\n\r\n    // let result_master\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        { \r\n            query : 'https://www.breakingbadapi.com/api/characters', \r\n            result : [],\r\n            pagecount : 0,\r\n            profilename : 'Walter White',\r\n            profile : []\r\n        }\r\n        // this,handleNext = this.handleNext.bind(this)\r\n        // this,handlePrev = this.handlePrev.bind(this)\r\n    }\r\n\r\n    componentDidMount= () => {\r\n        fetch(this.state.query+'?limit=10').then(res =>res.json()).then(result => {\r\n            this.setState({result})\r\n        })\r\n\r\n        // console.log(this.state.result)\r\n    }\r\n\r\n    handlePrev = () =>\r\n    {\r\n        this.setState({\r\n            pagecount : this.state.pagecount - 1}, \r\n            () => {fetch(this.state.query+'?limit=10&offset=' + this.state.pagecount*10).then(res =>res.json()).then(result => {\r\n                this.setState({result})\r\n            })\r\n         })\r\n\r\n    }\r\n\r\n    handleNext = () =>\r\n    {\r\n       this.setState({\r\n           pagecount : this.state.pagecount + 1}, \r\n           () => {fetch(this.state.query+'?limit=10&offset=' + this.state.pagecount*10).then(res =>res.json()).then(result => {\r\n            this.setState({result})\r\n        })\r\n        })\r\n        \r\n\r\n    }\r\n\r\n    profilerender = (name) => {\r\n\r\n        console.log(name)\r\n\r\n        let name_split = name.replace('/ /g','+')\r\n\r\n        this.setState({profilename: name}, \r\n            () => {fetch(this.state.query+'?name='+name_split).then(res =>res.json()).then(profile => {\r\n                this.setState({profile})\r\n            })\r\n\r\n            console.log(res)\r\n\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {img,name,dob,occ,stat,nick,act,seas,cat} = this.state.profile\r\n\r\n        return (\r\n            <div>\r\n                <button onClick = {this.handlePrev}>Prev</button><button onClick = {this.handleNext}>Next</button>\r\n                <div>\r\n                    <div className = 'col-sm-6'>{\r\n                    this.state.result.map(x =><div ><Charrow var = {x} profilerend = {this.profilerender}/><div class = 'row'></div></div>)\r\n\r\n                    }   </div>\r\n                    <div className = 'col-sm-6'>\r\n                    <div className='row'>\r\n                        <div className='col-sm-6'>IMG</div>\r\n                        <div className='col-sm-6'>{this.state.profile.name}</div>\r\n                    </div>\r\n                    <div className='row'>{dob}</div>\r\n                    <div className='row'>{occ}</div>\r\n                    <div className='row'>{stat}</div>\r\n                    <div className='row'>Nickname</div>\r\n                    <div className='row'>Actor</div>\r\n                    <div className='row'>Seasons</div>\r\n                    <div className='row'>Quotes</div>    \r\n                    \r\n                    </div>    \r\n                \r\n                </div>\r\n            </div>\r\n            \r\n        \r\n        );\r\n    }\r\n}\r\n \r\nexport default Listing;"]},"metadata":{},"sourceType":"module"}